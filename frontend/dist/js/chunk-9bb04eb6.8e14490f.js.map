{"version":3,"sources":["webpack:///./src/services/patientsService.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/utils/notificationsUtils.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/services/doctorsService.js","webpack:///./src/services/healthcareWorkersService.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/services/usersService.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["PatientsService","http","get","doctorId","id","data","post","put","delete","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","NotificationsUtils","text","vs","position","progress","duration","color","notification","title","console","log","e","message","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","DoctorsService","idToDelete","newResponsibleId","HealthcareWorkersService","_defineProperties","target","props","descriptor","_createClass","Constructor","protoProps","staticProps","UsersService","patch","_classCallCheck","instance","$","isObject","isArray","toAbsoluteIndex","toLength","toIndexedObject","createProperty","wellKnownSymbol","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","ACCESSORS","0","1","SPECIES","nativeSlice","max","Math","proto","forced","start","end","n","O","k","fin","Array"],"mappings":"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","file":"js/chunk-9bb04eb6.8e14490f.js","sourcesContent":["import http from \"@/http-common\";\n\nclass PatientsService {\n  getAll() {\n    return http.get(\"patients/\");\n  }\n\n  getAllByDoctor(doctorId) {\n    return http.get(\"patients/\", {\n      'params': {\n        'main_doctor': doctorId,\n      }\n    })\n  }\n\n  get(id) {\n    return http.get(`patients/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"patients/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`patients/${id}/`, data);\n  }\n\n  delete(id) {\n    return http.delete(`patients/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`patients`);\n  }\n}\n\nexport default new PatientsService();\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","class NotificationsUtils {\n    successPopup(text, vs) {\n          const position = 'top-right';\n          const progress = 'auto';\n          const duration = '6000';\n          const color = 'success';\n\n          const notification = vs.notification({\n              duration,\n              progress,\n              color,\n              position,\n              title: 'Hooray!🎉',\n              text: text,\n          });\n          console.log(notification);\n    }\n\n    failPopup(e, vs) {\n        const position = 'top-right';\n        const progress = 'auto';\n        const duration = '6000';\n        const color = 'danger';\n\n        const notification = vs.notification({\n            duration,\n            progress,\n            color,\n            position,\n            title: 'Whoops!😓: ' + e.message,\n            text: 'Something went wrong. Try again later or contact support.'\n        });\n        console.log(notification);\n    }\n}\n\nexport default new NotificationsUtils();","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import http from \"@/http-common\";\n\nclass DoctorsService {\n  getAll() {\n    return http.get(\"doctors\");\n  }\n\n  get(id) {\n    return http.get(`doctors/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"doctors/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`doctors/${id}/`, data);\n  }\n\n  delete(id) {\n    return http.delete(`doctors/${id}/`);\n  }\n\n  deleteWithNewResponsible(idToDelete, newResponsibleId) {\n    return http.delete(`doctors/${idToDelete}`, {\n      'params': {\n        ...({'alt': newResponsibleId}),\n      }\n    })\n  }\n\n  deleteAll() {\n    return http.delete(`doctors`);\n  }\n}\n\nexport default new DoctorsService();\n","import http from \"@/http-common\";\n\nclass HealthcareWorkersService {\n  getAll() {\n    return http.get(\"healthcare-workers/\");\n  }\n\n  get(id) {\n    return http.get(`healthcare-workers/${id}/`);\n  }\n\n  create(data) {\n    return http.post(\"healthcare-workers/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`healthcare-workers/${id}/`, data);\n  }\n\n  delete(id) {\n    return http.delete(`healthcare-workers/${id}/`);\n  }\n\n  deleteAll() {\n    return http.delete(`healthcare-workers/`);\n  }\n}\n\nexport default new HealthcareWorkersService();\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import http from \"@/http-common\";\n\nclass UsersService {\n  getAll() {\n    return http.get(\"users/\");\n  }\n\n  get(id) {\n    return http.get(`users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"users/\", data);\n  }\n\n  update(id, data) {\n    return http.put(`users/${id}/`, data);\n  }\n\n  updateSelected(id, data) {\n    return http.patch(`users/${id}/`, data);\n  }\n\n  delete(id) {\n    return http.delete(`users/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`users`);\n  }\n}\n\nexport default new UsersService();\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}