# Generated by Django 3.1.3 on 2020-11-19 00:53

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, default=datetime.date.today, max_length=8)),
                ('email_field', models.EmailField(default=None, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=32)),
                ('specializes_in', models.CharField(blank=True, default=None, max_length=254)),
                ('user_active', models.BooleanField(default=True)),
                ('active_from', models.DateField(default=datetime.date.today)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DoctorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_created', models.DateField(auto_now_add=True)),
                ('text', models.CharField(max_length=2046)),
            ],
            options={
                'ordering': ['date_of_created'],
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_examination', models.DateTimeField()),
            ],
            options={
                'ordering': ['date_of_examination'],
            },
        ),
        migrations.CreateModel(
            name='ExaminationAction',
            fields=[
                ('name', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('is_action_paid', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HealthcareWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, default=datetime.date.today, max_length=8)),
                ('email_field', models.EmailField(default=None, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=32)),
                ('works_for_company', models.CharField(blank=True, default=None, max_length=254)),
                ('user_active', models.BooleanField(default=True)),
                ('active_from', models.DateField(default=datetime.date.today)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransactionRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_state', models.CharField(choices=[('PD', 'Paid'), ('UD', 'Unpaid'), ('FR', 'Free')], default='FR', max_length=2)),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.examination')),
                ('examination_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.examinationaction')),
                ('transaction_approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.healthcareworker')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, default=datetime.date.today, max_length=8)),
                ('email_field', models.EmailField(default=None, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=32)),
                ('user_active', models.BooleanField(default=True)),
                ('active_from', models.DateField(default=datetime.date.today)),
                ('mainDoctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctor')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HealthConcern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('description', models.CharField(max_length=2046)),
                ('state', models.CharField(choices=[('WT', 'Waiting'), ('ON', 'Ongoing'), ('TL', 'Terminal'), ('ED', 'Ended')], default='ON', max_length=2)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.patient')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExaminationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('PD', 'Pending'), ('CD', 'Canceled'), ('RD', 'Resolved')], default='PD', max_length=2)),
                ('concern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.healthconcern')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctor')),
            ],
            options={
                'ordering': ['created_timestamp'],
            },
        ),
        migrations.AddField(
            model_name='examinationaction',
            name='action_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.healthcareworker'),
        ),
        migrations.AddField(
            model_name='examination',
            name='actions',
            field=models.ManyToManyField(through='hospitalis.TransactionRequest', to='hospitalis.ExaminationAction'),
        ),
        migrations.AddField(
            model_name='examination',
            name='examinating_doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctor'),
        ),
        migrations.AddField(
            model_name='examination',
            name='request_based_on',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.examinationrequest'),
        ),
        migrations.CreateModel(
            name='DoctorReportCommentary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2046)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctorreport')),
            ],
        ),
        migrations.AddField(
            model_name='doctorreport',
            name='about_concern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.healthconcern'),
        ),
        migrations.AddField(
            model_name='doctorreport',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalis.doctor'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('doctor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospitalis.doctor')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('healthcare_worker', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospitalis.healthcareworker')),
                ('patient', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospitalis.patient')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
